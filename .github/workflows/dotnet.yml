# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on: [push, pull_request]

jobs:

  build:
    name: build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore "Dnd Inventory/Dnd Inventory.sln"
    - name: Build
      run: dotnet build "Dnd Inventory/Dnd Inventory.sln" --no-restore
  unit_test:
    name: unit_test
    needs: build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Tests
      run: dotnet test "Dnd Inventory/Tests/Tests.csproj"

  integration_test:
    name: integration_test
    needs: build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3307
        container port: 3307
        mysql user: 'root'
        mysql root password: 'RootSqlHost'
        mysql database: 'dndtestinventory'
          
    - name: Tests
      run: dotnet test "Dnd Inventory/Integration test/Integration test.csproj"
  analyse:
    needs: integration_test
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore "Dnd Inventory/Dnd Inventory.sln"
    - name: Build
      run: dotnet build "Dnd Inventory/Dnd Inventory.sln" --no-restore
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet tool install --global dotnet-coverage
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"MatsDaamen_Dnd-inventory" /o:"matsdaamen" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build --no-restore Dnd Inventory/Dnd Inventory.sln
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
