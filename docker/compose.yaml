services:

  mysql-db:
    container_name: dnd-inventory-mysql
    image: mysql/mysql-server:latest
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=dndinventory
      - MYSQL_ROOT_PASSWORD=RootSqlHost
      - MYSQL_ROOT_HOST=%
    ports:
      - '3306:3306'
    volumes:
      - mysql-db:/var/lib/mysql
      - ./mysql-db/init.sql:/docker-entrypoint-initmysql-db.d/init.sql

  mysql-test-db:
    container_name: dnd-test-inventory-mysql
    image: mysql/mysql-server:latest
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=dndtestinventory
      - MYSQL_ROOT_PASSWORD=RootSqlHost
      - MYSQL_ROOT_HOST=%
    ports:
      - '3307:3307'
    volumes:
      - mysql-test-db:/var/lib/mysql
      - ./mysql-test-db/init.sql:/docker-entrypoint-initmysql-test-db.d/init.sql

  api:
    build: 
      context: ./
      dockerfile: ../Dnd-Inventory/Dockerfile
    container_name: api
    ports:
      - 5254:5254
    depends_on:
      mysql-db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: RootSqlHost
      DB_NAME: dndinventory
      
volumes:
  mysql-db:
    driver: local
  mysql-test-db:
    driver: local
  mongo-db:
    driver: local